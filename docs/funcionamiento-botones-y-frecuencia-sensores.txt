FUNCIONAMIENTO DE LOS BOTONES Y FRECUENCIA DE SENSORES
========================================================

PARTE 1: ¬øQU√â PASA CUANDO PRESIONAS CADA BOT√ìN?
------------------------------------------------

üî¥ BOT√ìN "ENTRENAR RED"
-----------------------

Cuando presionas este bot√≥n, ocurre lo siguiente paso a paso:

PASO 1: Captura de pesos actuales
----------------------------------
El simulador lee los valores de los 3 sliders de pesos:
  - Peso de Humedad (ejemplo: 0.60)
  - Peso de Temperatura (ejemplo: 0.50)
  - Peso de Lluvia (ejemplo: 0.40)

PASO 2: Generaci√≥n del dataset de entrenamiento
-----------------------------------------------
Se crean 400 ejemplos sint√©ticos de forma aleatoria:

Para cada ejemplo:
  1. Se genera una humedad aleatoria entre 0 y 1 (ej: 0.42)
  2. Se genera una temperatura aleatoria entre 0 y 1 (ej: 0.67)
  3. Se genera una probabilidad de lluvia aleatoria entre 0 y 1 (ej: 0.15)
  
  4. Se calcula un "puntaje ideal" usando los pesos configurados:
     Puntaje = (1 - humedad) √ó peso_h + temperatura √ó peso_t + (1 - lluvia) √ó peso_r
     Ejemplo: (1 - 0.42) √ó 0.60 + 0.67 √ó 0.50 + (1 - 0.15) √ó 0.40
            = 0.58 √ó 0.60 + 0.67 √ó 0.50 + 0.85 √ó 0.40
            = 0.348 + 0.335 + 0.34
            = 1.023
  
  5. Si el puntaje > 0.6 ‚Üí Etiqueta = 1 (S√ç regar)
     Si el puntaje ‚â§ 0.6 ‚Üí Etiqueta = 0 (NO regar)
  
  6. Se guarda el ejemplo: {entrada: [0.42, 0.67, 0.15], etiqueta: 1}

Al final tenemos 400 ejemplos como este, cada uno con diferentes valores.

PASO 3: Entrenamiento (300 √©pocas)
-----------------------------------
Se repite este proceso 300 veces:

Para cada √©poca (iteraci√≥n completa sobre los 400 ejemplos):
  
  Para cada ejemplo del dataset:
    
    A) PROPAGACI√ìN HACIA ADELANTE (Forward):
       - La red toma las 3 entradas
       - Las pasa por la capa oculta (6 neuronas con ReLU)
       - Obtiene una predicci√≥n de salida (neurona con sigmoid)
       - Ejemplo: predice 0.42 cuando la respuesta correcta es 1
    
    B) C√ÅLCULO DEL ERROR:
       Error = Predicci√≥n - Etiqueta_correcta
       Error = 0.42 - 1 = -0.58
       Error_cuadrado = (-0.58)¬≤ = 0.3364
    
    C) RETROPROPAGACI√ìN (Backward):
       - Calcula cu√°nto contribuy√≥ cada peso al error
       - Ajusta los pesos de la capa de salida:
         Peso_nuevo = Peso_viejo - (tasa_aprendizaje √ó gradiente)
         Ejemplo: Peso_nuevo = 0.45 - (0.01 √ó 2.3) = 0.427
       
       - Propaga el error hacia atr√°s y ajusta pesos de la capa oculta:
         Similar al anterior, cada uno de los 18 pesos (6 neuronas √ó 3 entradas)
         se ajusta un poco
    
  Al terminar los 400 ejemplos, se calcula el error promedio (MSE) de esta √©poca.

Despu√©s de 300 √©pocas, los pesos se han ajustado 120,000 veces (300 √ó 400),
y la red ahora puede predecir correctamente seg√∫n los pesos configurados.

PASO 4: Actualizaci√≥n de pantalla
----------------------------------
  - √âpocas entrenadas: se suma 300 al contador (si ya hab√≠a 300, ahora muestra 600)
  - Error (p√©rdida): muestra el MSE final (ejemplo: 0.0234)
  - Aparece un alert con el resumen del entrenamiento
  - Se ejecuta autom√°ticamente una predicci√≥n con los valores actuales de los sliders

TIEMPO ESTIMADO: 1-2 segundos en un navegador moderno.


üîµ BOT√ìN "PREDECIR AHORA"
-------------------------

Cuando presionas este bot√≥n, ocurre lo siguiente:

PASO 1: Captura de valores actuales de los sensores
----------------------------------------------------
Lee los valores de los 3 sliders de entrada:
  - Humedad del suelo (ejemplo: 35%)
  - Temperatura ambiente (ejemplo: 28¬∞C)
  - Probabilidad de lluvia (ejemplo: 20%)

PASO 2: Normalizaci√≥n de datos
-------------------------------
Convierte los valores a escala 0-1:
  - Humedad normalizada = 35 / 100 = 0.35
  - Temperatura normalizada = 28 / 45 = 0.622
  - Lluvia normalizada = 20 / 100 = 0.20

Datos de entrada: [0.35, 0.622, 0.20]

PASO 3: Predicci√≥n con la red neuronal
---------------------------------------
Pasa los datos por la red entrenada:

  A) Capa oculta:
     Calcula la salida de las 6 neuronas usando los pesos actuales
     Resultado: [0.234, 0.0, 0.456, 0.178, 0.0, 0.389]
  
  B) Capa de salida:
     Combina las 6 salidas con los pesos de salida
     Aplica sigmoid para obtener probabilidad
     Resultado: 0.623 (Salida NN)

PASO 4: C√°lculo del puntaje ponderado
--------------------------------------
Lee los pesos actuales de los sliders:
  - Peso humedad = 0.60
  - Peso temperatura = 0.50
  - Peso lluvia = 0.40

Calcula el puntaje manual:
  Puntaje = [(1 - 0.35) √ó 0.60 + 0.622 √ó 0.50 + (1 - 0.20) √ó 0.40] / (0.60 + 0.50 + 0.40)
  Puntaje = [0.65 √ó 0.60 + 0.622 √ó 0.50 + 0.80 √ó 0.40] / 1.50
  Puntaje = [0.39 + 0.311 + 0.32] / 1.50
  Puntaje = 1.021 / 1.50
  Puntaje = 0.681

PASO 5: Probabilidad combinada
-------------------------------
Promedia la salida de la red y el puntaje ponderado:
  Combinada = (Salida_NN + Puntaje) / 2
  Combinada = (0.623 + 0.681) / 2
  Combinada = 0.652

PASO 6: Decisi√≥n final
-----------------------
Si Combinada > 0.5 ‚Üí Decisi√≥n: "üíß REGAR ACTIVADO"
Si Combinada ‚â§ 0.5 ‚Üí Decisi√≥n: "üå§Ô∏è NO REGAR (Descanso)"

En este caso: 0.652 > 0.5, entonces muestra "üíß REGAR ACTIVADO"

PASO 7: Actualizaci√≥n de pantalla
----------------------------------
  - Panel de resultados:
    * Salida de la red: 0.623
    * Puntaje ponderado: 0.681
    * Probabilidad combinada: 0.652
  
  - Cuadro de decisi√≥n: Se muestra con fondo verde y el mensaje "üíß REGAR ACTIVADO"
  
  - Hist√≥rico:
    * Se agrega una nueva fila a la tabla con todos los datos
    * Si ya hay 10 entradas, se elimina la m√°s antigua
  
  - Gr√°fica:
    * Se a√±ade un nuevo punto a cada l√≠nea (humedad, temperatura, lluvia, probabilidad combinada)
    * Se redibuja el gr√°fico con los √∫ltimos 10 puntos

TIEMPO ESTIMADO: Instant√°neo (< 50 milisegundos).


üü† BOT√ìN "SIMULACI√ìN: OFF/ON"
-----------------------------

Este bot√≥n alterna entre modo manual y autom√°tico.

CUANDO SE ACTIVA (OFF ‚Üí ON):
-----------------------------
PASO 1: Cambia el texto del bot√≥n a "‚è∏Ô∏è Simulaci√≥n: ON"
PASO 2: Cambia el color del bot√≥n a verde (#4caf50)
PASO 3: Selecciona un ejemplo de muestra del array predefinido:
        Muestras disponibles:
          { h: 42, t: 26, r: 10 }  // Humedad media, temp baja, poca lluvia
          { h: 38, t: 30, r: 15 }  // Humedad baja, temp media, poca lluvia
          { h: 55, t: 22, r: 80 }  // Humedad alta, temp baja, mucha lluvia
          { h: 28, t: 33, r: 5 }   // Humedad muy baja, temp alta, casi sin lluvia
          { h: 47, t: 27, r: 40 }  // Humedad media, temp media, lluvia media
          { h: 35, t: 29, r: 20 }  // Humedad baja, temp media, poca lluvia
          { h: 25, t: 35, r: 0 }   // Humedad muy baja, temp muy alta, sin lluvia
          { h: 65, t: 18, r: 90 }  // Humedad alta, temp baja, mucha lluvia

PASO 4: Aplica la primera muestra inmediatamente:
        - Mueve los sliders a los valores de la muestra
        - Actualiza los displays
        - Ejecuta predicci√≥n autom√°ticamente

PASO 5: Inicia un temporizador que cada 3 segundos:
        - Avanza al siguiente ejemplo del array (de forma circular)
        - Mueve los sliders
        - Actualiza displays
        - Ejecuta predicci√≥n
        - Actualiza gr√°fica e hist√≥rico

El ciclo contin√∫a indefinidamente hasta que se presiona de nuevo.

CUANDO SE DESACTIVA (ON ‚Üí OFF):
--------------------------------
PASO 1: Detiene el temporizador (clearInterval)
PASO 2: Cambia el texto del bot√≥n a "‚èØÔ∏è Simulaci√≥n: OFF"
PASO 3: Restaura el color original del bot√≥n (naranja)
PASO 4: Los sliders quedan en el √∫ltimo valor de la simulaci√≥n
PASO 5: El usuario puede ajustar manualmente de nuevo


üî¥ BOT√ìN "REINICIAR TODO"
-------------------------

Cuando presionas este bot√≥n (despu√©s de confirmar en el di√°logo):

PASO 1: Reinicializa la red neuronal
-------------------------------------
  - Genera nuevos pesos aleatorios para W1 (18 valores entre -0.1 y 0.1)
  - Genera nuevos sesgos aleatorios para b1 (6 valores)
  - Genera nuevos pesos aleatorios para W2 (6 valores)
  - Genera nuevo sesgo aleatorio para b2 (1 valor)
  - Resetea totalEpochs a 0

PASO 2: Limpia el hist√≥rico
----------------------------
  - Vac√≠a el array de hist√≥rico (history = [])
  - Limpia la tabla HTML
  - Limpia los 4 datasets de la gr√°fica
  - Redibuja la gr√°fica vac√≠a

PASO 3: Resetea displays
-------------------------
  - √âpocas entrenadas: 0
  - Error (p√©rdida): ‚Äî
  - Salida de la red: ‚Äî
  - Puntaje ponderado: ‚Äî
  - Probabilidad combinada: ‚Äî
  - Oculta el cuadro de decisi√≥n

PASO 4: Detiene simulaci√≥n si est√° activa
------------------------------------------
  - Detiene el timer
  - Restaura el bot√≥n de simulaci√≥n a OFF

PASO 5: Mantiene valores de sliders
------------------------------------
Los sliders de entrada (humedad, temperatura, lluvia) y de pesos NO se resetean,
quedan en sus valores actuales para que el usuario pueda entrenar de nuevo.


‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê


PARTE 2: FRECUENCIA DE SENSORES EN SISTEMA REAL
------------------------------------------------

üå± RECOMENDACIONES PARA EL SISTEMA F√çSICO DE RIEGO
--------------------------------------------------

En un sistema real con sensores f√≠sicos y microcontrolador ESP32, la frecuencia
de muestreo y procesamiento debe balancear varios factores:


üìä FRECUENCIA DE LECTURA DE SENSORES
-------------------------------------

SENSOR DE HUMEDAD DEL SUELO (Capacitivo o Resistivo):
------------------------------------------------------
  ‚úÖ Frecuencia recomendada: Cada 5-10 minutos
  
  Razones:
  - La humedad del suelo cambia LENTAMENTE (horas, no minutos)
  - Lecturas muy frecuentes desgastan el sensor (corrosi√≥n electroqu√≠mica)
  - Consumo innecesario de energ√≠a en sistemas con bater√≠a
  - Genera ruido sin informaci√≥n √∫til
  
  Ejemplo:
    Cada 10 minutos = 144 lecturas/d√≠a
    Suficiente para detectar cambios graduales y eventos de riego


SENSOR DE TEMPERATURA (DHT22, DS18B20, BME280):
------------------------------------------------
  ‚úÖ Frecuencia recomendada: Cada 2-5 minutos
  
  Razones:
  - La temperatura ambiente cambia m√°s r√°pido que la humedad del suelo
  - Importante para detectar picos de calor que aumentan evapotranspiraci√≥n
  - Los sensores digitales modernos son r√°pidos y precisos
  
  Ejemplo:
    Cada 5 minutos = 288 lecturas/d√≠a
    Captura ciclos diurnos (fr√≠o ma√±ana, calor mediod√≠a, fresco tarde/noche)


SENSOR DE LLUVIA (Pluvi√≥metro o Sensor Capacitivo):
----------------------------------------------------
  ‚úÖ Frecuencia recomendada: Cada 1-2 minutos (o por EVENTO)
  
  Razones:
  - La lluvia puede comenzar y terminar r√°pidamente
  - Es cr√≠tico detectarla a tiempo para cancelar riego programado
  - Algunos sensores funcionan por interrupci√≥n (detectan evento en tiempo real)
  
  Alternativa (si no hay sensor f√≠sico):
    API de clima cada 30-60 minutos para pron√≥stico de lluvia
    Ejemplo: OpenWeatherMap, WeatherAPI, AEMET


DATOS CLIM√ÅTICOS EXTERNOS (APIs de Internet):
----------------------------------------------
  ‚úÖ Frecuencia recomendada: Cada 30-60 minutos
  
  Razones:
  - Los servicios de clima limitan peticiones (ej: 1000 llamadas/d√≠a gratis)
  - Los pron√≥sticos se actualizan cada hora generalmente
  - Complementan sensores locales con datos regionales
  
  Ejemplo:
    Cada 60 minutos = 24 llamadas/d√≠a
    Obtiene: temperatura, humedad relativa, velocidad viento, lluvia pr√≥ximas 24h


üß† FRECUENCIA DE PROCESAMIENTO CON RED NEURONAL
------------------------------------------------

AN√ÅLISIS Y DECISI√ìN DE RIEGO:
------------------------------
  ‚úÖ Frecuencia recomendada: Cada 10-15 minutos
  
  Proceso:
  1. El ESP32 lee los sensores seg√∫n su frecuencia individual
  2. Cada 10-15 minutos, recolecta las √∫ltimas lecturas disponibles
  3. Normaliza los datos (humedad/100, temp/45, lluvia/100)
  4. Ejecuta la red neuronal (inferencia muy r√°pida: ~5-50 ms)
  5. Calcula probabilidad combinada
  6. Toma decisi√≥n: activar/desactivar v√°lvula de riego
  
  Razones:
  - Balance entre reactividad y estabilidad
  - Evita cambios bruscos (on/off r√°pido que da√±a v√°lvulas y bombas)
  - Permite promediar lecturas ruidosas
  - Suficiente para responder a cambios reales en el cultivo
  
  Ejemplo de rutina:
    05:00 ‚Üí Lee sensores ‚Üí NN predice 0.45 ‚Üí No regar
    05:15 ‚Üí Lee sensores ‚Üí NN predice 0.48 ‚Üí No regar
    05:30 ‚Üí Lee sensores ‚Üí NN predice 0.52 ‚Üí ¬°Activar riego!
    05:45 ‚Üí Lee sensores ‚Üí NN predice 0.68 ‚Üí Mantener riego
    06:00 ‚Üí Lee sensores ‚Üí NN predice 0.42 ‚Üí Desactivar riego


GUARDADO EN BASE DE DATOS:
---------------------------
  ‚úÖ Frecuencia recomendada: Cada an√°lisis (10-15 minutos)
  
  Datos a guardar:
    - Timestamp
    - Humedad del suelo (%)
    - Temperatura (¬∞C)
    - Probabilidad de lluvia (%)
    - Salida de la red neuronal
    - Puntaje ponderado
    - Probabilidad combinada
    - Decisi√≥n tomada (0 = no regar, 1 = regar)
    - Estado de v√°lvula (abierta/cerrada)
    - Volumen de agua usado (si hay caudal√≠metro)
  
  Razones:
  - Genera hist√≥rico para an√°lisis posterior
  - Permite reentrenar la red con datos reales
  - Auditor√≠a del sistema (¬øpor qu√© reg√≥ o no reg√≥?)
  - C√°lculo de ahorro de agua vs sistema manual
  
  Esquema de tabla SQL:
    CREATE TABLE lecturas_riego (
      id INT AUTO_INCREMENT PRIMARY KEY,
      timestamp DATETIME NOT NULL,
      humedad_suelo FLOAT,
      temperatura FLOAT,
      prob_lluvia FLOAT,
      salida_nn FLOAT,
      puntaje_ponderado FLOAT,
      prob_combinada FLOAT,
      decision BOOLEAN,
      valvula_abierta BOOLEAN,
      volumen_ml INT,
      INDEX idx_timestamp (timestamp)
    );


üîÑ REENTRENAMIENTO DE LA RED
-----------------------------

FRECUENCIA RECOMENDADA: Cada 7-30 d√≠as (semanal o mensual)
-----------------------------------------------------------

Proceso:
  1. Recolecta datos hist√≥ricos del √∫ltimo per√≠odo (ej: √∫ltimo mes)
  2. Filtra y limpia datos (elimina outliers, sensores desconectados, etc.)
  3. Un servidor externo o la nube ejecuta el entrenamiento (no el ESP32)
     - Ejemplo: Script en Python con TensorFlow/PyTorch
     - Usa los datos reales para ajustar la red
  4. Valida el nuevo modelo con datos de prueba
  5. Si mejora el rendimiento, exporta pesos actualizados
  6. Env√≠a los nuevos pesos al ESP32 (archivo JSON o por MQTT)
  7. El ESP32 actualiza sus pesos en memoria y sigue operando

Razones:
  - La red se adapta a las condiciones espec√≠ficas del cultivo y clima local
  - Aprende patrones estacionales (primavera vs verano vs oto√±o)
  - Mejora la precisi√≥n con datos reales vs datos sint√©ticos iniciales
  - El ESP32 no tiene capacidad para entrenar (solo para inferencia)


üì± NOTIFICACIONES Y ALERTAS
----------------------------

CUANDO ENVIAR NOTIFICACIONES AL USUARIO:
-----------------------------------------
  ‚úÖ Riego activado/desactivado: En tiempo real (push notification)
  ‚úÖ Humedad cr√≠tica (< 20%): Inmediato
  ‚úÖ Temperatura extrema (> 40¬∞C): Inmediato
  ‚úÖ Sensor desconectado: Despu√©s de 3 lecturas fallidas
  ‚úÖ Resumen diario: Una vez al d√≠a (ejemplo: 20:00)
       - Agua consumida hoy
       - N√∫mero de riegos
       - Condiciones promedio
  ‚úÖ Resumen semanal: Domingo en la noche
       - Ahorro vs riego manual estimado
       - Gr√°fica de humedad/temperatura de la semana


‚ö° OPTIMIZACI√ìN DE ENERG√çA (Importante para sistemas con bater√≠a)
-----------------------------------------------------------------

Si el sistema funciona con panel solar + bater√≠a:

MODO ACTIVO (06:00 - 22:00):
  - Lectura de sensores cada 5-10 minutos
  - Procesamiento NN cada 10-15 minutos
  - WiFi conectado para env√≠o de datos a BD

MODO AHORRO (22:00 - 06:00):
  - Lectura de sensores cada 30 minutos (el cultivo no cambia mucho de noche)
  - Procesamiento NN cada 30 minutos
  - WiFi en modo sleep (solo despierta para enviar datos cr√≠ticos)
  - Pantalla/LEDs apagados

MODO ULTRA-AHORRO (Bater√≠a < 20%):
  - Solo lectura de humedad cada 60 minutos
  - WiFi apagado (guarda datos en memoria local)
  - Riego solo si humedad < umbral cr√≠tico (20%)


‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê


PARTE 3: EJEMPLO DE CRONOGRAMA REAL (D√çA T√çPICO)
-------------------------------------------------

üïê 05:00 AM
-----------
Sensor humedad: 42%  |  Sensor temp: 18¬∞C  |  API clima: 10% lluvia
Red neuronal: 0.32 ‚Üí NO REGAR (tierra h√∫meda de la noche, temperatura baja)
Guarda en BD: [05:00, 42, 18, 10, 0.32, NO]

üïë 06:00 AM
-----------
Sensor humedad: 41%  |  Sensor temp: 22¬∞C  |  API clima: 5% lluvia
Red neuronal: 0.38 ‚Üí NO REGAR (amanecer, todav√≠a fresco)
Guarda en BD: [06:00, 41, 22, 5, 0.38, NO]

üïê 07:00 AM
-----------
Sensor humedad: 39%  |  Sensor temp: 26¬∞C  |  API clima: 5% lluvia
Red neuronal: 0.45 ‚Üí NO REGAR (cerca del umbral, pero a√∫n aceptable)
Guarda en BD: [07:00, 39, 26, 5, 0.45, NO]

üïë 08:00 AM
-----------
Sensor humedad: 36%  |  Sensor temp: 30¬∞C  |  API clima: 5% lluvia
Red neuronal: 0.54 ‚Üí ‚úÖ ACTIVAR RIEGO (humedad bajando, temperatura subiendo)
Guarda en BD: [08:00, 36, 30, 5, 0.54, S√ç]
üíß Abre v√°lvula de riego
üì± Push notification: "Riego activado en Parcela Principal"

üïê 08:30 AM
-----------
Sensor humedad: 48%  |  Sensor temp: 32¬∞C  |  API clima: 5% lluvia
Red neuronal: 0.42 ‚Üí ‚ùå DESACTIVAR RIEGO (humedad recuperada despu√©s de 30min)
Guarda en BD: [08:30, 48, 32, 5, 0.42, NO]
üíß Cierra v√°lvula de riego
üì± Push notification: "Riego completado (30 minutos, ~50 litros)"

üïë 12:00 PM
-----------
Sensor humedad: 44%  |  Sensor temp: 38¬∞C  |  API clima: 10% lluvia
Red neuronal: 0.48 ‚Üí NO REGAR (temperatura alta pero humedad a√∫n aceptable)
Guarda en BD: [12:00, 44, 38, 10, 0.48, NO]

üïë 03:00 PM
-----------
Sensor humedad: 40%  |  Sensor temp: 39¬∞C  |  API clima: 60% lluvia
Red neuronal: 0.35 ‚Üí NO REGAR (aunque hace calor, va a llover pronto)
Guarda en BD: [15:00, 40, 39, 60, 0.35, NO]
üí° La red aprendi√≥ a NO regar si hay alta probabilidad de lluvia

üïë 05:00 PM
-----------
Sensor lluvia: DETECTA LLUVIA (evento)
Sistema: Cancela cualquier riego programado
Sensor humedad: 62%  |  Sensor temp: 24¬∞C  |  Lluvia: 100%
Red neuronal: 0.12 ‚Üí NO REGAR (tierra h√∫meda por lluvia)
Guarda en BD: [17:00, 62, 24, 100, 0.12, NO]

üïë 08:00 PM
-----------
Sensor humedad: 58%  |  Sensor temp: 19¬∞C  |  API clima: 20% lluvia
Red neuronal: 0.28 ‚Üí NO REGAR (noche, tierra h√∫meda)
Guarda en BD: [20:00, 58, 19, 20, 0.28, NO]
üì± Notificaci√≥n resumen diario:
   "Hoy se reg√≥ 1 vez (30min)
    Agua usada: ~50 litros
    Ahorro estimado: 60% vs riego manual
    Temperatura m√°xima: 39¬∞C
    Lluvia acumulada: 8mm"


‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê


RESUMEN DE FRECUENCIAS RECOMENDADAS
====================================

| Actividad                           | Frecuencia          | Raz√≥n principal                    |
|-------------------------------------|---------------------|------------------------------------|
| Lectura humedad suelo               | 5-10 minutos        | Cambio lento, protege sensor       |
| Lectura temperatura                 | 2-5 minutos         | Cambio medio, detecta picos        |
| Lectura lluvia                      | 1-2 min o por evento| Cambio r√°pido, cr√≠tico             |
| API clima (pron√≥stico)              | 30-60 minutos       | L√≠mite de llamadas, actualizaci√≥n  |
| An√°lisis con red neuronal           | 10-15 minutos       | Balance reactividad/estabilidad    |
| Guardado en base de datos           | 10-15 minutos       | Cada an√°lisis para hist√≥rico       |
| Reentrenamiento de la red           | 7-30 d√≠as           | Adaptaci√≥n gradual a condiciones   |
| Notificaci√≥n cambio de riego        | Tiempo real         | Usuario debe saber inmediatamente  |
| Resumen diario                      | 1 vez al d√≠a        | Informativo sin saturar            |


¬øPor qu√© estas frecuencias y no otras?
---------------------------------------
‚úÖ M√ÅS FRECUENTE = M√°s datos, pero:
   - Desgaste de sensores
   - Mayor consumo energ√©tico
   - Sobrecarga de base de datos
   - Decisiones inestables (ruido)

‚úÖ MENOS FRECUENTE = Ahorro de recursos, pero:
   - Puede perder eventos cr√≠ticos
   - Respuesta lenta a cambios
   - Menor precisi√≥n en control

Las frecuencias recomendadas est√°n basadas en:
  - Caracter√≠sticas f√≠sicas del suelo y clima
  - Velocidad de respuesta de las plantas
  - Capacidad t√©cnica del ESP32
  - Mejores pr√°cticas en agricultura de precisi√≥n


FIN DEL DOCUMENTO
=================

